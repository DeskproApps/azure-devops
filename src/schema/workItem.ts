import { z } from "zod";

export const IAzureWorkItemFieldsSchema = z
  .object({
    "System.AreaPath": z.string().optional(),
    "System.TeamProject": z.string(),
    "System.IterationPath": z.string().optional(),
    "System.WorkItemType": z.string(),
    "System.State": z.string().optional(),
    "System.Reason": z.string().optional(),
    "System.AssignedTo": z.string().optional(),
    "System.CreatedDate": z.string().optional(),
    "System.CreatedBy": z.string().optional(),
    "System.ChangedDate": z.string().optional(),
    "System.ChangedBy": z.string().optional(),
    "System.CommentCount": z.number().optional(),
    "System.Title": z.string(),
    "Microsoft.VSTS.Common.Priority": z.string().optional(),
    "Microsoft.VSTS.Common.Severity": z.string().optional(),
    "Microsoft.VSTS.Common.Activity": z.string().optional(),
    "Microsoft.VSTS.Scheduling.OriginalEstimate": z.string().optional(),
    "Microsoft.VSTS.Scheduling.RemainingWork": z.string().optional(),
    "Microsoft.VSTS.Scheduling.CompletedWork": z.string().optional(),
    "Microsoft.VSTS.TCM.ReproSteps": z.string().optional(),
    "Microsoft.VSTS.TCM.SystemInfo": z.string().optional(),
    "Microsoft.VSTS.Common.Risk": z.string().optional(),
    "Microsoft.VSTS.Scheduling.Effort": z.string().optional(),
    "Microsoft.VSTS.Common.BusinessValue": z.string().optional(),
    "Microsoft.VSTS.Common.TimeCriticality": z.string().optional(),
    "Microsoft.VSTS.Scheduling.StartDate": z.string().optional(),
    "Microsoft.VSTS.Scheduling.TargetDate": z.string().optional(),
    "Microsoft.VSTS.Common.StackRank": z.string().optional(),
    "Microsoft.VSTS.Scheduling.DueDate": z.string().optional(),
    "Microsoft.VSTS.Scheduling.StoryPoints": z.string().optional(),
    "Microsoft.VSTS.Common.ValueArea": z.string().optional(),
    "Microsoft.VSTS.Build.FoundIn": z.string().optional(),
    "Microsoft.VSTS.Build.IntegrationBuild": z.string().optional(),
    "Microsoft.VSTS.Common.AcceptanceCriteria": z.string().optional(),
    "Microsoft.VSTS.Common.Resolution": z.string().optional(),
    "Microsoft.VSTS.CMMI.Blocked": z.string().optional(),
    "Microsoft.VSTS.Common.ResolvedReason": z.string().optional(),
    "Microsoft.VSTS.Scheduling.Size": z.string().optional(),
    "Microsoft.VSTS.Common.Triage": z.string().optional(),
    "Microsoft.VSTS.Common.Discipline": z.string().optional(),
    "Microsoft.VSTS.CMMI.RootCause": z.string().optional(),
    "Microsoft.VSTS.CMMI.Symptom": z.string().optional(),
    "Microsoft.VSTS.CMMI.ProposedFix": z.string().optional(),
    "Microsoft.VSTS.CMMI.Justification": z.string().optional(),
    "Microsoft.VSTS.CMMI.ImpactOnArchitecture": z.string().optional(),
    "Microsoft.VSTS.CMMI.ImpactOnUserExperience": z.string().optional(),
    "Microsoft.VSTS.CMMI.ImpactOnTest": z.string().optional(),
    "Microsoft.VSTS.CMMI.ImpactOnDevelopment": z.string().optional(),
    "Microsoft.VSTS.CMMI.ImpactOnTechnicalPublications": z.string().optional(),
    Integrated: z.string().optional(),
    "Microsoft.VSTS.CMMI.Escalate": z.string().optional(),
    "Microsoft.VSTS.CMMI.TargetResolveDate": z.string().optional(),
    "Microsoft.VSTS.CMMI.ImpactAssessmentHtml": z.string().optional(),
    Plan: z.string().optional(),
    "Microsoft.VSTS.CMMI.CorrectiveActionActualResolution": z
      .string()
      .optional(),
    "Microsoft.VSTS.CMMI.Committed": z.string().optional(),
    "Microsoft.VSTS.CMMI.ContingencyPlan": z.string().optional(),
    "Microsoft.VSTS.CMMI.Probability": z.string().optional(),
    "Microsoft.VSTS.Scheduling.FinishDate": z.string().optional(),
    "System.Tags": z.string().optional(),
  })
  .transform((obj) => ({
    ...obj,
    "System.TeamProject": "",
    "System.WorkItemType": obj["System.WorkItemType"].split(".").at(-1),
    "System.IterationPath": obj["System.IterationPath"]
      ? `${obj["System.AreaPath"]}\\${obj["System.IterationPath"]}`
      : "",
  }));
